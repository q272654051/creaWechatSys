<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 下面二个功能差不多-->
	<aop:aspectj-autoproxy/>
	
	<context:component-scan base-package="com.crea.www" />
	
<!-- 数据源外置文件配置引入(开始) -->
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:jdbc.properties</value>
		</property>
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url"
				  value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="100"></property>
		<property name="maxIdle" value="30"></property>
		<property name="maxWait" value="500"></property>
	</bean>
	<!-- 管理hibernate -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<!--thread jdbc事物 jta 全局事物,managed session管理机制 -->
				<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="current_session_context_class">thread</prop>    
				
     			 <!-- Hibernate将收集有助于性能调节的统计数据 -->  
      			<prop key="hibernate.generate_statistics">true</prop>  
 			 	<!-- <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop> -->
			</props>
		</property>
		<property name="packagesToScan" value="com.crea.www.vo" />
	</bean>
	<!-- 配置事物管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="defaultEncoding" value="UTF-8"/>
	    <!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
	    <property name="maxUploadSize" value="10485760000"/>
	    <!-- 最大内存大小 (10240)-->
	    <property name="maxInMemorySize" value="40960" />
	</bean>
	<!-- 配置事务传播特性 -->
	<tx:advice id="TestAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS"  />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="apply*" propagation="REQUIRED" />
			<tx:method name="query*" propagation="SUPPORTS" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!--启用spring注解管理 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	<!-- 配置参与事务的类 -->
	<aop:config expose-proxy="true">
		<!-- dao 和 service都采用事物管理 -->
		<aop:pointcut id="allServiceMethod"
			expression="(execution(* com.crea.www.commons.service.*.*(..)))" />
		<aop:advisor pointcut-ref="allServiceMethod" advice-ref="TestAdvice" />
	</aop:config>
	<!-- 定时器功能 -->
<!--  <import resource="spring-quartz.xml"/>-->

</beans>
